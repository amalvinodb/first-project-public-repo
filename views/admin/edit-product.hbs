<section class="vh-100 gradient-custom">
    <div class="container py-5 h-100">
        <div class="row justify-content-center align-items-center h-100">
            <div class="col-12 col-lg-9 col-xl-7">
                <div class="card shadow-2-strong card-registration" style="border-radius: 15px;">
                    <div class="card-body p-4 p-md-5">
                        <h3 class="mb-4 pb-2 pb-md-0 mb-md-5">Edit Product Details</h3>
                        <form enctype="multipart/form-data" action="/admin/editProduct/{{product._id}}" method="post">
                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <div class="form-outline">
                                        <input name="productName" type="text" id="productName"
                                            class="form-control form-control-lg" value="{{product.productName}}" />
                                        <label class="form-label" for="firstName">product name</label>
                                    </div>
                                </div>
                                <div class="col-md-6 mb-4">
                                    <div class="form-outline">
                                        <label class="form-label" for="catagory">catagory of the product</label>
                                        <select name="catagory" class="form-select" aria-label="Default select example"
                                            required>
                                            <option value="{{product.catagory}}">select a catagory</option>
                                            {{#each catagories}}
                                            <option value="{{this._id}}">{{this.catagoryName}}</option>
                                            {{/each}}

                                        </select>

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="row">
                                    <div class="col-md-6 mb-4">
                                        <div class="form-outline">
                                            <input name="quantity" type="number" id="quantity"
                                                class="form-control form-control-lg" value="{{product.quantity}}" />
                                            <label class="form-label" for="firstName">quantity</label>
                                        </div>
                                    </div>
                                    <div class="col-md-6 mb-4">
                                        <div class="form-outline">
                                            <input name="price" type="number" id="price"
                                                class="form-control form-control-lg" value="{{product.price}}" />
                                            <label class="form-label" for="price">price of the product</label>
                                        </div>
                                    </div>
                                </div>
                                    <input name="offerRate" type="number" id="offerPrice"
                                        class="form-control form-control-lg" value="{{product.offerRate}}" min="0"
                                        max="100" hidden />
                            </div>
                            <div class="row">
                                <div class="col-12">
                                    <div id="image-box1" style="width: 500px; height: 500px; display: none;"></div>
                                    <button class="btn btn-primary  mt-3" type="button" style="display: none;"
                                        id="crop-btn1">Crop</button>
                                </div>
                                <div class="col-md-6 mb-4 pb-2">
                                    <div class="form-outline">
                                        <label for="">IMAGE 1</label>
                                        <img src="https://www.generationsforpeace.org/wp-content/uploads/2018/03/empty.jpg"
                                            alt="" style="width: 100px; height:auto" id="imgView1">
                                        <input type="file" name="image1" id="id_image1" class="form-control"
                                            onchange=" fileValidation1(event)" accept="image/*">
                                    </div>
                                </div>
                                <div class="col-md-6 mb-4 pb-2">
                                    <div class="form-outline">
                                        <label for="">IMAGE 2</label>
                                        <img src="https://www.generationsforpeace.org/wp-content/uploads/2018/03/empty.jpg"
                                            alt="" style="width: 100px; height:auto" id="imgView2">
                                        <input type="file" name="image2" id="id_image2" class="form-control"
                                            onchange=" fileValidation2(event)">
                                    </div>
                                </div>
                                <div class="col-md-6 mb-4 pb-2">
                                    <div class="form-outline">
                                        <label for="">IMAGE 3</label>
                                        <img src="https://www.generationsforpeace.org/wp-content/uploads/2018/03/empty.jpg"
                                            alt="" style="width: 100px; height:auto" id="imgView3">
                                        <input type="file" name="image3" id="id_image3" class="form-control"
                                            onchange=" fileValidation3(event)">
                                    </div>
                                </div>
                                <div class="col-md-6 mb-4 pb-2">
                                    <div class="form-outline">
                                        <label for="">IMAGE 4</label>
                                        <img src="https://www.generationsforpeace.org/wp-content/uploads/2018/03/empty.jpg"
                                            alt="" style="width: 100px; height:auto" id="imgView4">
                                        <input type="file" name="image4" id="id_image4" class="form-control"
                                            onchange=" fileValidation4(event)">
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 mb-4 pb-2">

                                <div class="form-outline">
                                    <textarea name="discription" id="discription" cols="70"
                                        rows="10">{{product.discription}}</textarea>
                                    <label class="form-label" for="discription">discription of the product</label>

                                </div>
                            </div>

                    </div>
                    <div class="mt-4 pt-2">
                        <input class="btn btn-primary btn-lg" type="submit" value="Submit" />
                    </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    </div>
</section>

    <script>

    // image cropper for first image

    const imagebox1 = document.getElementById('image-box1')
    const crop_btn1 = document.getElementById('crop-btn1')
    const input1 = document.getElementById('id_image1')
    function fileValidation1(event) {
        var fileInput = document.getElementById('id_image1');
        var filePath = fileInput.value;
        var allowedExtensions = /(\.jpg|\.jpeg|\.png)$/i;
        if (!allowedExtensions.exec(filePath)) {
            fileInput.value = '';
            swal("There is a problem!", "Please choose image file.");
            return false;
        } else {
            document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
        }
    }
    input1.addEventListener('change', () => {
        const img_data1 = input1.files[0]
        const url1 = URL.createObjectURL(img_data1)
        imagebox1.innerHTML = `<img src="${url1}" id="image1" style="width:100%;">`
        const image1 = document.getElementById('image1')
        document.getElementById('image-box1').style.display = 'block'
        document.getElementById('crop-btn1').style.display = 'block'
        const cropper1 = new Cropper(image1, {
            autoCropArea: 1,
            viewMode: 1,
            scalable: false,
            zoomable: false,
            movable: false,
            minCropBoxWidth: 50,
            minCropBoxHeight: 50,
        })
        crop_btn1.addEventListener('click', () => {
            cropper1.getCroppedCanvas().toBlob((blob) => {
                let fileInputElement1 = document.getElementById('id_image1');
                let file1 = new File([blob], img_data1.name, { type: "image/*", lastModified: new Date().getTime() });
                let container1 = new DataTransfer();
                container1.items.add(file1);
                fileInputElement1.files = container1.files;
                document.getElementById('imgView1').src = URL.createObjectURL(fileInputElement1.files[0])
                document.getElementById('image-box1').style.display = 'none'
                document.getElementById('crop-btn1').style.display = 'none'
            })
        })
    })

    // image cropper for second image

    const imagebox2 = document.getElementById('image-box1')
    const crop_btn2 = document.getElementById('crop-btn1')
    const input2 = document.getElementById('id_image2')
    function fileValidation2(event) {
        var fileInput = document.getElementById('id_image2');
        var filePath = fileInput.value;
        var allowedExtensions = /(\.jpg|\.jpeg|\.png)$/i;
        if (!allowedExtensions.exec(filePath)) {
            fileInput.value = '';
            swal("There is a problem!", "Please choose image file.");
            return false;
        } else {
            document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
        }
    }
    input2.addEventListener('change', () => {
        const img_data1 = input2.files[0]
        const url1 = URL.createObjectURL(img_data1)
        imagebox2.innerHTML = `<img src="${url1}" id="image2" style="width:100%;">`
        const image2 = document.getElementById('image2')
        document.getElementById('image-box1').style.display = 'block'
        document.getElementById('crop-btn1').style.display = 'block'
        const cropper2 = new Cropper(image2, {
            autoCropArea: 1,
            viewMode: 1,
            scalable: false,
            zoomable: false,
            movable: false,
            minCropBoxWidth: 50,
            minCropBoxHeight: 50,
        })
        crop_btn2.addEventListener('click', () => {
            cropper2.getCroppedCanvas().toBlob((blob) => {
                let fileInputElement1 = document.getElementById('id_image2');
                let file1 = new File([blob], img_data1.name, { type: "image/*", lastModified: new Date().getTime() });
                let container1 = new DataTransfer();
                container1.items.add(file1);
                fileInputElement1.files = container1.files;
                document.getElementById('imgView2').src = URL.createObjectURL(fileInputElement1.files[0])
                document.getElementById('image-box1').style.display = 'none'
                document.getElementById('crop-btn1').style.display = 'none'
            })
        })
    })

    // image cropper for third image

    const imagebox3 = document.getElementById('image-box1')
    const crop_btn3 = document.getElementById('crop-btn1')
    const input3 = document.getElementById('id_image3')
    function fileValidation3(event) {
        var fileInput = document.getElementById('id_image3');
        var filePath = fileInput.value;
        var allowedExtensions = /(\.jpg|\.jpeg|\.png)$/i;
        if (!allowedExtensions.exec(filePath)) {
            fileInput.value = '';
            swal("There is a problem!", "Please choose image file.");
            return false;
        } else {
            document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
        }
    }
    input3.addEventListener('change', () => {
        const img_data1 = input3.files[0]
        const url1 = URL.createObjectURL(img_data1)
        imagebox3.innerHTML = `<img src="${url1}" id="image3" style="width:100%;">`
        const image3 = document.getElementById('image3')
        document.getElementById('image-box1').style.display = 'block'
        document.getElementById('crop-btn1').style.display = 'block'
        const cropper3 = new Cropper(image3, {
            autoCropArea: 1,
            viewMode: 1,
            scalable: false,
            zoomable: false,
            movable: false,
            minCropBoxWidth: 50,
            minCropBoxHeight: 50,
        })
        crop_btn3.addEventListener('click', () => {
            cropper3.getCroppedCanvas().toBlob((blob) => {
                let fileInputElement1 = document.getElementById('id_image3');
                let file1 = new File([blob], img_data1.name, { type: "image/*", lastModified: new Date().getTime() });
                let container1 = new DataTransfer();
                container1.items.add(file1);
                fileInputElement1.files = container1.files;
                document.getElementById('imgView3').src = URL.createObjectURL(fileInputElement1.files[0])
                document.getElementById('image-box1').style.display = 'none'
                document.getElementById('crop-btn1').style.display = 'none'
            })
        })
    })

    // image cropper for forth image

    const imagebox4 = document.getElementById('image-box1')
    const crop_btn4 = document.getElementById('crop-btn1')
    const input4 = document.getElementById('id_image4')
    function fileValidation4(event) {
        var fileInput = document.getElementById('id_image4');
        var filePath = fileInput.value;
        var allowedExtensions = /(\.jpg|\.jpeg|\.png)$/i;
        if (!allowedExtensions.exec(filePath)) {
            fileInput.value = '';
            swal("There is a problem!", "Please choose image file.");
            return false;
        } else {
            document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0])
        }
    }
    input4.addEventListener('change', () => {
        const img_data1 = input4.files[0]
        const url1 = URL.createObjectURL(img_data1)
        imagebox4.innerHTML = `<img src="${url1}" id="image4" style="width:100%;">`
        const image4 = document.getElementById('image4')
        document.getElementById('image-box1').style.display = 'block'
        document.getElementById('crop-btn1').style.display = 'block'
        const cropper4 = new Cropper(image4, {
            autoCropArea: 1,
            viewMode: 1,
            scalable: false,
            zoomable: false,
            movable: false,
            minCropBoxWidth: 50,
            minCropBoxHeight: 50,
        })
        crop_btn4.addEventListener('click', () => {
            cropper4.getCroppedCanvas().toBlob((blob) => {
                let fileInputElement1 = document.getElementById('id_image4');
                let file1 = new File([blob], img_data1.name, { type: "image/*", lastModified: new Date().getTime() });
                let container1 = new DataTransfer();
                container1.items.add(file1);
                fileInputElement1.files = container1.files;
                document.getElementById('imgView4').src = URL.createObjectURL(fileInputElement1.files[0])
                document.getElementById('image-box1').style.display = 'none'
                document.getElementById('crop-btn1').style.display = 'none'
            })
        })
    })

</script>
